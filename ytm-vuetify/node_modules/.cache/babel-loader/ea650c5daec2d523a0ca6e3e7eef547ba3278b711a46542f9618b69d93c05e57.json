{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'LibraryView',\n  computed: {},\n  components: {},\n  props: ['id'],\n  data() {\n    return {\n      albums: [],\n      playlists: []\n    };\n  },\n  methods: {\n    fetchUserLibrary() {\n      axios.get(`http://127.0.0.1:3000/user/${this.id}`).then(response => {\n        this.albums = response.data.albums;\n        console.log(this.albums);\n        this.playlists = response.data.playlists;\n        console.log(this.playlists);\n      }).catch(error => console.error(error));\n    },\n    playAlbum(album, order) {\n      // play the track of the corresponding order in the album\n      const albumId = album.pid;\n      console.log('Start to play album:', albumId, 'with order:', order);\n      this.$store.commit('setCurAlbum', album);\n      this.$store.commit('setCurOrder', order);\n      const url = `http://127.0.0.1:3000/getTrackByOrder/?album_id=${albumId}&order=${order}`;\n      axios.get(url).then(response => {\n        this.$store.commit('setCurTrack', response.data);\n        console.log('Got TrackInfo:', this.$store.state.curTrack);\n      }).catch(error => console.error(error));\n    },\n    openAlbum(album) {\n      this.$router.push({\n        name: 'album',\n        params: {\n          id: album.pid,\n          albumInfo: album\n        }\n      });\n    }\n  },\n  mounted() {\n    this.fetchUserLibrary();\n  }\n};","map":{"version":3,"names":["axios","name","computed","components","props","data","albums","playlists","methods","fetchUserLibrary","get","id","then","response","console","log","catch","error","playAlbum","album","order","albumId","pid","$store","commit","url","state","curTrack","openAlbum","$router","push","params","albumInfo","mounted"],"sources":["src/views/LibraryView.vue"],"sourcesContent":["<template>\n<v-sheet\n    class=\"mx-auto\"\n>\n<v-banner shaped><span style=\"font-size:20pt;\">{{}}'s Library</span></v-banner>\n<v-slide-group\n      v-model=\"model\"\n      active-class=\"success\"\n      show-arrows\n    >\n    <v-slide-item\n        v-for=\"album in albums\"\n        :key=\"album.pid\"\n        class=\"album\"\n    >\n        <v-card\n            class=\"ma-4\"\n            height=\"300\"\n            width=\"250\"\n            @click=\"openAlbum(album)\"\n        >\n            <div class=\"text-center text-truncate\" style=\"margin:auto;\">{{ album.name }}</div>\n            <v-card-actions class=\"d-flex flex-column align-center\">\n                <v-img :src=\"`http://127.0.0.1:3000/image/${album.pid}.jpg`\" alt=\"Album cover\" height=\"200\" width=\"200\"/>\n                <v-btn @click.stop=\"playAlbum(album,0)\" style=\"margin-top:15px;\">\n                    <svg-icon type=\"mdi\" :path=\"playIconPath\"></svg-icon>\n                </v-btn>\n            </v-card-actions>\n        </v-card>\n    </v-slide-item>\n</v-slide-group>\n\n<div v-if=\"ifLogin\" style=\"text-align:center;margin-top:50px;\">\n  <v-divider></v-divider>\n  <v-btn\n    color=\"primary\"\n    elevation=\"5\"\n    x-large\n    style=\"margin-top:50px;\"\n    @click=\"openUserLibrary()\"\n  >User Library</v-btn>\n</div>\n\n</v-sheet>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'LibraryView',\n\n  computed: {\n  },\n\n  components: {\n  },\n\n  props: ['id'],\n\n  data() {\n    return {\n      albums: [],\n      playlists: [],\n    };\n  },\n  methods: {\n    fetchUserLibrary() {\n      axios\n        .get(`http://127.0.0.1:3000/user/${this.id}`)\n        .then((response) => {\n          this.albums = response.data.albums;\n          console.log(this.albums);\n          this.playlists = response.data.playlists;\n          console.log(this.playlists);\n        })\n        .catch((error) => console.error(error));\n    },\n    playAlbum(album, order) { // play the track of the corresponding order in the album\n      const albumId = album.pid;\n      console.log('Start to play album:', albumId, 'with order:', order);\n      this.$store.commit('setCurAlbum', album);\n      this.$store.commit('setCurOrder', order);\n      const url = `http://127.0.0.1:3000/getTrackByOrder/?album_id=${albumId}&order=${order}`;\n      axios\n        .get(url)\n        .then((response) => {\n          this.$store.commit('setCurTrack', response.data);\n          console.log('Got TrackInfo:', this.$store.state.curTrack);\n        })\n        .catch((error) => console.error(error));\n    },\n    openAlbum(album) {\n      this.$router.push({ name: 'album', params: { id: album.pid, albumInfo: album } });\n    },\n  },\n  mounted() {\n    this.fetchUserLibrary();\n  },\n};\n</script>\n"],"mappings":";AA+CA,OAAAA,KAAA;AAEA;EACAC,IAAA;EAEAC,QAAA,GACA;EAEAC,UAAA,GACA;EAEAC,KAAA;EAEAC,KAAA;IACA;MACAC,MAAA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,iBAAA;MACAT,KAAA,CACAU,GAAA,oCAAAC,EAAA,IACAC,IAAA,CAAAC,QAAA;QACA,KAAAP,MAAA,GAAAO,QAAA,CAAAR,IAAA,CAAAC,MAAA;QACAQ,OAAA,CAAAC,GAAA,MAAAT,MAAA;QACA,KAAAC,SAAA,GAAAM,QAAA,CAAAR,IAAA,CAAAE,SAAA;QACAO,OAAA,CAAAC,GAAA,MAAAR,SAAA;MACA,GACAS,KAAA,CAAAC,KAAA,IAAAH,OAAA,CAAAG,KAAA,CAAAA,KAAA;IACA;IACAC,UAAAC,KAAA,EAAAC,KAAA;MAAA;MACA,MAAAC,OAAA,GAAAF,KAAA,CAAAG,GAAA;MACAR,OAAA,CAAAC,GAAA,yBAAAM,OAAA,iBAAAD,KAAA;MACA,KAAAG,MAAA,CAAAC,MAAA,gBAAAL,KAAA;MACA,KAAAI,MAAA,CAAAC,MAAA,gBAAAJ,KAAA;MACA,MAAAK,GAAA,sDAAAJ,OAAA,UAAAD,KAAA;MACApB,KAAA,CACAU,GAAA,CAAAe,GAAA,EACAb,IAAA,CAAAC,QAAA;QACA,KAAAU,MAAA,CAAAC,MAAA,gBAAAX,QAAA,CAAAR,IAAA;QACAS,OAAA,CAAAC,GAAA,wBAAAQ,MAAA,CAAAG,KAAA,CAAAC,QAAA;MACA,GACAX,KAAA,CAAAC,KAAA,IAAAH,OAAA,CAAAG,KAAA,CAAAA,KAAA;IACA;IACAW,UAAAT,KAAA;MACA,KAAAU,OAAA,CAAAC,IAAA;QAAA7B,IAAA;QAAA8B,MAAA;UAAApB,EAAA,EAAAQ,KAAA,CAAAG,GAAA;UAAAU,SAAA,EAAAb;QAAA;MAAA;IACA;EACA;EACAc,QAAA;IACA,KAAAxB,gBAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}