{"ast":null,"code":"import axios from 'axios';\nimport CryptoJS from 'crypto-js';\nexport default {\n  name: 'LoginView',\n  components: {},\n  data() {\n    return {\n      key: 'password'\n    };\n  },\n  methods: {\n    login() {\n      const username = this.$refs.loginUsername.value;\n      const password = this.$refs.loginPassword.value;\n      const rememberFlag = this.$refs.loginRemember.value;\n      const encryptedPassword = CryptoJS.AES.encrypt(password, this.key).toString();\n      const data = {\n        user: username,\n        secret: encryptedPassword,\n        remember: rememberFlag\n      };\n      console.log('login data submitted:', data);\n      axios.post('http://127.0.0.1:3000/login').then(response => {\n        console.log('received response:', response.data);\n        if (response.data.status === 0) {\n          console.log('Login Success');\n        } else if (response.data.status === 1) {\n          console.log('Username or Password error');\n        }\n      }).catch(error => console.error(error));\n    },\n    signup() {\n      const username = this.$refs.getElementById('signup-username').value;\n      const password = this.$refs.getElementById('signup-password').value;\n      const passwordRepeat = this.$refs.getElementById('signup-password-repeat').value;\n      if (password !== passwordRepeat) {\n        this.$toasted.show('Passwords do not match!');\n        return;\n      }\n      const encryptedPassword = CryptoJS.AES.encrypt(password, this.key).toString();\n      const data = {\n        user: username,\n        secret: encryptedPassword\n      };\n      console.log('Sign up data submitted:', data);\n      axios.post('http://127.0.0.1:3000/signup').then(response => {\n        console.log('received response:', response.data);\n      }).catch(error => console.error(error));\n    }\n  }\n};","map":{"version":3,"names":["axios","CryptoJS","name","components","data","key","methods","login","username","$refs","loginUsername","value","password","loginPassword","rememberFlag","loginRemember","encryptedPassword","AES","encrypt","toString","user","secret","remember","console","log","post","then","response","status","catch","error","signup","getElementById","passwordRepeat","$toasted","show"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<template>\n<v-content>\n  <v-form id=\"login-form\">\n        <h2>Login</h2>\n        <v-label for=\"login-username\">Username</v-label>\n        <v-input type=\"text\" id=\"login-username\" ref=\"loginUsername\" required></v-input>\n        <v-label for=\"login-password\">Password</v-label>\n        <v-input type=\"password\" id=\"login-password\" ref=\"loginPassword\" required></v-input>\n        <v-label for=\"login-remember\">Remember me</v-label>\n        <v-input type=\"checkbox\" id=\"login-remember\" ref=\"loginRemember\"></v-input>\n        <v-btn type=\"button\" @click=\"login()\">Submit</v-btn>\n    </v-form>\n    <v-form id=\"signup-form\">\n        <h2>Sign Up</h2>\n        <v-label for=\"signup-username\">Username</v-label>\n        <v-input type=\"text\" id=\"signup-username\" ref=\"signupUsername\" required></v-input>\n        <v-label for=\"signup-password\">Password</v-label>\n        <v-input type=\"password\" id=\"signup-password\" ref=\"signupPassword\" required></v-input>\n        <v-label for=\"signup-password-repeat\">Repeat Password</v-label>\n        <v-input type=\"password\" id=\"signup-password-repeat\" ref=\"signupPasswordRepeat\" required>\n        </v-input>\n        <v-btn type=\"button\" @click=\"signup()\">Submit</v-btn>\n    </v-form>\n</v-content>\n</template>\n\n<script>\nimport axios from 'axios';\nimport CryptoJS from 'crypto-js';\n\nexport default {\n  name: 'LoginView',\n\n  components: {\n  },\n\n  data() {\n    return {\n      key: 'password',\n    };\n  },\n  methods: {\n    login() {\n      const username = this.$refs.loginUsername.value;\n      const password = this.$refs.loginPassword.value;\n      const rememberFlag = this.$refs.loginRemember.value;\n      const encryptedPassword = CryptoJS.AES.encrypt(password, this.key).toString();\n      const data = {\n        user: username,\n        secret: encryptedPassword,\n        remember: rememberFlag,\n      };\n      console.log('login data submitted:', data);\n      axios\n        .post('http://127.0.0.1:3000/login')\n        .then((response) => {\n          console.log('received response:', response.data);\n          if (response.data.status === 0) {\n            console.log('Login Success');\n          } else if (response.data.status === 1) {\n            console.log('Username or Password error');\n          }\n        })\n        .catch((error) => console.error(error));\n    },\n    signup() {\n      const username = this.$refs.getElementById('signup-username').value;\n      const password = this.$refs.getElementById('signup-password').value;\n      const passwordRepeat = this.$refs.getElementById('signup-password-repeat').value;\n      if (password !== passwordRepeat) {\n        this.$toasted.show('Passwords do not match!');\n        return;\n      }\n      const encryptedPassword = CryptoJS.AES.encrypt(password, this.key).toString();\n      const data = {\n        user: username,\n        secret: encryptedPassword,\n      };\n      console.log('Sign up data submitted:', data);\n      axios\n        .post('http://127.0.0.1:3000/signup')\n        .then((response) => {\n          console.log('received response:', response.data);\n        })\n        .catch((error) => console.error(error));\n    },\n  },\n};\n</script>\n"],"mappings":"AA2BA,OAAAA,KAAA;AACA,OAAAC,QAAA;AAEA;EACAC,IAAA;EAEAC,UAAA,GACA;EAEAC,KAAA;IACA;MACAC,GAAA;IACA;EACA;EACAC,OAAA;IACAC,MAAA;MACA,MAAAC,QAAA,QAAAC,KAAA,CAAAC,aAAA,CAAAC,KAAA;MACA,MAAAC,QAAA,QAAAH,KAAA,CAAAI,aAAA,CAAAF,KAAA;MACA,MAAAG,YAAA,QAAAL,KAAA,CAAAM,aAAA,CAAAJ,KAAA;MACA,MAAAK,iBAAA,GAAAf,QAAA,CAAAgB,GAAA,CAAAC,OAAA,CAAAN,QAAA,OAAAP,GAAA,EAAAc,QAAA;MACA,MAAAf,IAAA;QACAgB,IAAA,EAAAZ,QAAA;QACAa,MAAA,EAAAL,iBAAA;QACAM,QAAA,EAAAR;MACA;MACAS,OAAA,CAAAC,GAAA,0BAAApB,IAAA;MACAJ,KAAA,CACAyB,IAAA,gCACAC,IAAA,CAAAC,QAAA;QACAJ,OAAA,CAAAC,GAAA,uBAAAG,QAAA,CAAAvB,IAAA;QACA,IAAAuB,QAAA,CAAAvB,IAAA,CAAAwB,MAAA;UACAL,OAAA,CAAAC,GAAA;QACA,WAAAG,QAAA,CAAAvB,IAAA,CAAAwB,MAAA;UACAL,OAAA,CAAAC,GAAA;QACA;MACA,GACAK,KAAA,CAAAC,KAAA,IAAAP,OAAA,CAAAO,KAAA,CAAAA,KAAA;IACA;IACAC,OAAA;MACA,MAAAvB,QAAA,QAAAC,KAAA,CAAAuB,cAAA,oBAAArB,KAAA;MACA,MAAAC,QAAA,QAAAH,KAAA,CAAAuB,cAAA,oBAAArB,KAAA;MACA,MAAAsB,cAAA,QAAAxB,KAAA,CAAAuB,cAAA,2BAAArB,KAAA;MACA,IAAAC,QAAA,KAAAqB,cAAA;QACA,KAAAC,QAAA,CAAAC,IAAA;QACA;MACA;MACA,MAAAnB,iBAAA,GAAAf,QAAA,CAAAgB,GAAA,CAAAC,OAAA,CAAAN,QAAA,OAAAP,GAAA,EAAAc,QAAA;MACA,MAAAf,IAAA;QACAgB,IAAA,EAAAZ,QAAA;QACAa,MAAA,EAAAL;MACA;MACAO,OAAA,CAAAC,GAAA,4BAAApB,IAAA;MACAJ,KAAA,CACAyB,IAAA,iCACAC,IAAA,CAAAC,QAAA;QACAJ,OAAA,CAAAC,GAAA,uBAAAG,QAAA,CAAAvB,IAAA;MACA,GACAyB,KAAA,CAAAC,KAAA,IAAAP,OAAA,CAAAO,KAAA,CAAAA,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}