{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'AlbumView',\n  components: {},\n  props: ['id', 'name'],\n  data() {\n    return {\n      tracks: []\n    };\n  },\n  methods: {\n    fetchTracks() {\n      axios.get(`http://127.0.0.1:3000/getTracksByOrder/${this.id}`).then(response => {\n        this.tracks = response.data;\n        console.log(this.tracks);\n      }).catch(error => console.error(error));\n    }\n  },\n  computed: {\n    getDuration(time) {\n      let seconds = Math.round(time);\n      const minutes = Math.floor(seconds / 60);\n      seconds %= 60;\n      const paddedSeconds = seconds.toString().padStart(2, '0');\n      return `${minutes}:${paddedSeconds}`;\n    }\n  },\n  mounted() {\n    this.fetchTracks();\n  }\n};","map":{"version":3,"names":["axios","name","components","props","data","tracks","methods","fetchTracks","get","id","then","response","console","log","catch","error","computed","getDuration","time","seconds","Math","round","minutes","floor","paddedSeconds","toString","padStart","mounted"],"sources":["src/views/AlbumView.vue"],"sourcesContent":["<template>\n  <v-card\n    color=\"grey lighten-4\"\n    flat\n    tile\n  >\n    <v-toolbar\n    >\n      <v-avatar>\n        <v-img\n          :src=\"`http://127.0.0.1:3000/image/${id}.jpg`\"\n          alt=\"Album cover\"\n        />\n      </v-avatar>\n      <v-toolbar-title style=\"margin-left:20px;\">{{name}}</v-toolbar-title>\n      <v-card-text style=\"width: auto;\">{{tracks.length}} songs</v-card-text>\n      <v-spacer></v-spacer>\n\n      <v-btn icon>\n        <v-icon>mdi-heart</v-icon>\n      </v-btn>\n\n    </v-toolbar>\n\n    <v-simple-table>\n    <template v-slot:default>\n      <thead>\n        <tr>\n          <th>\n            Name\n          </th>\n          <th>\n            Artists\n          </th>\n          <th>\n            Album\n          </th>\n          <th>\n            Duration\n          </th>\n          <th>\n            Liked\n          </th>\n          <th>\n            Play\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr\n          v-for=\"track in tracks\"\n          :key=\"track.track_id\"\n        >\n          <td>{{ track.title }}</td>\n          <td>{{ track.artist.join(', ') }}</td>\n          <td>{{ track.album }}</td>\n          <td>{{ getDuration(track.length) }}</td>\n          <td><v-icon>mdi-heart-outline</v-icon></td>\n          <td><v-icon>mdi-play</v-icon></td>\n        </tr>\n      </tbody>\n    </template>\n  </v-simple-table>\n\n  </v-card>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'AlbumView',\n\n  components: {\n  },\n\n  props: ['id', 'name'],\n\n  data() {\n    return {\n      tracks: [],\n    };\n  },\n  methods: {\n    fetchTracks() {\n      axios\n        .get(`http://127.0.0.1:3000/getTracksByOrder/${this.id}`)\n        .then((response) => {\n          this.tracks = response.data;\n          console.log(this.tracks);\n        })\n        .catch((error) => console.error(error));\n    },\n  },\n  computed: {\n    getDuration(time) {\n      let seconds = Math.round(time);\n      const minutes = Math.floor(seconds / 60);\n      seconds %= 60;\n      const paddedSeconds = seconds.toString().padStart(2, '0');\n      return `${minutes}:${paddedSeconds}`;\n    },\n  },\n  mounted() {\n    this.fetchTracks();\n  },\n};\n</script>\n"],"mappings":"AAoEA,OAAAA,KAAA;AAEA;EACAC,IAAA;EAEAC,UAAA,GACA;EAEAC,KAAA;EAEAC,KAAA;IACA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACAP,KAAA,CACAQ,GAAA,gDAAAC,EAAA,IACAC,IAAA,CAAAC,QAAA;QACA,KAAAN,MAAA,GAAAM,QAAA,CAAAP,IAAA;QACAQ,OAAA,CAAAC,GAAA,MAAAR,MAAA;MACA,GACAS,KAAA,CAAAC,KAAA,IAAAH,OAAA,CAAAG,KAAA,CAAAA,KAAA;IACA;EACA;EACAC,QAAA;IACAC,YAAAC,IAAA;MACA,IAAAC,OAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAH,IAAA;MACA,MAAAI,OAAA,GAAAF,IAAA,CAAAG,KAAA,CAAAJ,OAAA;MACAA,OAAA;MACA,MAAAK,aAAA,GAAAL,OAAA,CAAAM,QAAA,GAAAC,QAAA;MACA,UAAAJ,OAAA,IAAAE,aAAA;IACA;EACA;EACAG,QAAA;IACA,KAAApB,WAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}