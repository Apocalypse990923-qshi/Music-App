{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport SvgIcon from '@jamescoyle/vue-icon';\nimport { mdiArrowLeft } from '@mdi/js';\nexport default {\n  name: 'AlbumView',\n  components: {\n    SvgIcon\n  },\n  props: ['id', 'albumInfo'],\n  data() {\n    return {\n      backIconPath: mdiArrowLeft,\n      tracks: []\n    };\n  },\n  methods: {\n    fetchTracks() {\n      axios.get(`http://127.0.0.1:3000/getTracksByOrder/${this.id}`).then(response => {\n        this.tracks = response.data;\n        console.log(this.tracks);\n      }).catch(error => console.error(error));\n    },\n    getDuration(time) {\n      let seconds = Math.round(time);\n      const minutes = Math.floor(seconds / 60);\n      seconds %= 60;\n      const paddedSeconds = seconds.toString().padStart(2, '0');\n      return `${minutes}:${paddedSeconds}`;\n    },\n    playAlbum(album, order) {\n      // play the track of the corresponding order in the album\n      const albumId = album.pid;\n      console.log('Start to play album:', albumId, 'with order:', order);\n      this.$store.commit('setCurAlbum', album);\n      this.$store.commit('setCurOrder', order);\n      const url = `http://127.0.0.1:3000/getTrackByOrder/?album_id=${albumId}&order=${order}`;\n      axios.get(url).then(response => {\n        this.$store.commit('setCurTrack', response.data);\n        console.log('Got TrackInfo:', this.$store.state.curTrack);\n      }).catch(error => console.error(error));\n    },\n    goBack() {\n      this.$router.push('/explore');\n    }\n  },\n  mounted() {\n    this.fetchTracks();\n  }\n};","map":{"version":3,"names":["axios","SvgIcon","mdiArrowLeft","name","components","props","data","backIconPath","tracks","methods","fetchTracks","get","id","then","response","console","log","catch","error","getDuration","time","seconds","Math","round","minutes","floor","paddedSeconds","toString","padStart","playAlbum","album","order","albumId","pid","$store","commit","url","state","curTrack","goBack","$router","push","mounted"],"sources":["src/views/AlbumView.vue"],"sourcesContent":["<template>\n  <v-card\n    color=\"grey lighten-4\"\n    flat\n    tile\n  >\n    <v-toolbar\n    >\n      <v-btn icon style=\"margin-right:20px;\" @click=\"goBack\">\n        <svg-icon type=\"mdi\" :path=\"backIconPath\"></svg-icon>\n      </v-btn>\n      <v-avatar>\n        <v-img\n          :src=\"`http://127.0.0.1:3000/image/${albumInfo.pid}.jpg`\"\n          alt=\"Album cover\"\n        />\n      </v-avatar>\n      <v-toolbar-title style=\"margin-left:20px;\">{{albumInfo.name}}</v-toolbar-title>\n      <v-card-text style=\"width: auto;\">{{tracks.length}} songs</v-card-text>\n      <v-spacer></v-spacer>\n\n      <v-btn icon>\n        <v-icon>mdi-heart</v-icon>\n      </v-btn>\n\n    </v-toolbar>\n\n    <v-simple-table>\n    <template v-slot:default>\n      <thead>\n        <tr>\n          <th class=\"text-center\">\n            #\n          </th>\n          <th class=\"text-center\">\n            Name\n          </th>\n          <th class=\"text-center\">\n            Artists\n          </th>\n          <th class=\"text-center\">\n            Album\n          </th>\n          <th class=\"text-center\">\n            Duration\n          </th>\n          <th class=\"text-center\">\n            Liked\n          </th>\n          <th class=\"text-center\">\n            Play\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr\n          v-for=\"(track, index) in tracks\"\n          :key=\"track.track_id\"\n        >\n          <td class=\"text-center\">{{ index+1 }}</td>\n          <td class=\"text-center\">{{ track.title }}</td>\n          <td class=\"text-center\">{{ track.artist.join(', ') }}</td>\n          <td class=\"text-center\">{{ track.album }}</td>\n          <td class=\"text-center\">{{ getDuration(track.length) }}</td>\n          <td class=\"text-center\">\n            <v-btn icon>\n              <v-icon>mdi-heart-outline</v-icon>\n            </v-btn>\n          </td>\n          <td class=\"text-center\">\n            <v-btn @click=\"playAlbum(albumInfo, index)\" icon>\n              <v-icon>mdi-play</v-icon>\n            </v-btn>\n          </td>\n        </tr>\n      </tbody>\n    </template>\n  </v-simple-table>\n\n  </v-card>\n</template>\n\n<script>\nimport axios from 'axios';\nimport SvgIcon from '@jamescoyle/vue-icon';\nimport { mdiArrowLeft } from '@mdi/js';\n\nexport default {\n  name: 'AlbumView',\n\n  components: {\n    SvgIcon,\n  },\n\n  props: ['id', 'albumInfo'],\n\n  data() {\n    return {\n      backIconPath: mdiArrowLeft,\n      tracks: [],\n    };\n  },\n  methods: {\n    fetchTracks() {\n      axios\n        .get(`http://127.0.0.1:3000/getTracksByOrder/${this.id}`)\n        .then((response) => {\n          this.tracks = response.data;\n          console.log(this.tracks);\n        })\n        .catch((error) => console.error(error));\n    },\n    getDuration(time) {\n      let seconds = Math.round(time);\n      const minutes = Math.floor(seconds / 60);\n      seconds %= 60;\n      const paddedSeconds = seconds.toString().padStart(2, '0');\n      return `${minutes}:${paddedSeconds}`;\n    },\n    playAlbum(album, order) { // play the track of the corresponding order in the album\n      const albumId = album.pid;\n      console.log('Start to play album:', albumId, 'with order:', order);\n      this.$store.commit('setCurAlbum', album);\n      this.$store.commit('setCurOrder', order);\n      const url = `http://127.0.0.1:3000/getTrackByOrder/?album_id=${albumId}&order=${order}`;\n      axios\n        .get(url)\n        .then((response) => {\n          this.$store.commit('setCurTrack', response.data);\n          console.log('Got TrackInfo:', this.$store.state.curTrack);\n        })\n        .catch((error) => console.error(error));\n    },\n    goBack() {\n      this.$router.push('/explore');\n    },\n  },\n  mounted() {\n    this.fetchTracks();\n  },\n};\n</script>\n"],"mappings":";AAmFA,OAAAA,KAAA;AACA,OAAAC,OAAA;AACA,SAAAC,YAAA;AAEA;EACAC,IAAA;EAEAC,UAAA;IACAH;EACA;EAEAI,KAAA;EAEAC,KAAA;IACA;MACAC,YAAA,EAAAL,YAAA;MACAM,MAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACAV,KAAA,CACAW,GAAA,gDAAAC,EAAA,IACAC,IAAA,CAAAC,QAAA;QACA,KAAAN,MAAA,GAAAM,QAAA,CAAAR,IAAA;QACAS,OAAA,CAAAC,GAAA,MAAAR,MAAA;MACA,GACAS,KAAA,CAAAC,KAAA,IAAAH,OAAA,CAAAG,KAAA,CAAAA,KAAA;IACA;IACAC,YAAAC,IAAA;MACA,IAAAC,OAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAH,IAAA;MACA,MAAAI,OAAA,GAAAF,IAAA,CAAAG,KAAA,CAAAJ,OAAA;MACAA,OAAA;MACA,MAAAK,aAAA,GAAAL,OAAA,CAAAM,QAAA,GAAAC,QAAA;MACA,UAAAJ,OAAA,IAAAE,aAAA;IACA;IACAG,UAAAC,KAAA,EAAAC,KAAA;MAAA;MACA,MAAAC,OAAA,GAAAF,KAAA,CAAAG,GAAA;MACAlB,OAAA,CAAAC,GAAA,yBAAAgB,OAAA,iBAAAD,KAAA;MACA,KAAAG,MAAA,CAAAC,MAAA,gBAAAL,KAAA;MACA,KAAAI,MAAA,CAAAC,MAAA,gBAAAJ,KAAA;MACA,MAAAK,GAAA,sDAAAJ,OAAA,UAAAD,KAAA;MACA/B,KAAA,CACAW,GAAA,CAAAyB,GAAA,EACAvB,IAAA,CAAAC,QAAA;QACA,KAAAoB,MAAA,CAAAC,MAAA,gBAAArB,QAAA,CAAAR,IAAA;QACAS,OAAA,CAAAC,GAAA,wBAAAkB,MAAA,CAAAG,KAAA,CAAAC,QAAA;MACA,GACArB,KAAA,CAAAC,KAAA,IAAAH,OAAA,CAAAG,KAAA,CAAAA,KAAA;IACA;IACAqB,OAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAhC,WAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}