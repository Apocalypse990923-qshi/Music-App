{"ast":null,"code":"import axios from 'axios';\nimport CryptoJS from 'crypto-js';\nexport default {\n  name: 'LoginView',\n  components: {},\n  data() {\n    return {\n      key: 'password'\n    };\n  },\n  methods: {\n    login() {\n      const username = this.$refs.loginUsername;\n      const password = this.$refs.loginPassword;\n      const rememberFlag = this.$refs.loginRemember;\n      const encryptedPassword = CryptoJS.AES.encrypt(password, this.key).toString();\n      const data = {\n        user: username,\n        secret: encryptedPassword,\n        remember: rememberFlag\n      };\n      console.log('login data submitted:', data);\n      axios.post('http://127.0.0.1:3000/login').then(response => {\n        console.log('received response:', response.data);\n        if (response.data.status === 0) {\n          console.log('Login Success');\n        } else if (response.data.status === 1) {\n          console.log('Username or Password error');\n        }\n      }).catch(error => console.error(error));\n    },\n    signup() {\n      const username = this.$refs.signupUsername.value;\n      const password = this.$refs.signupPassword.value;\n      const passwordRepeat = this.$refs.signupPasswordRepeat.value;\n      if (password !== passwordRepeat) {\n        this.$toasted.show('Passwords do not match!');\n        return;\n      }\n      const encryptedPassword = CryptoJS.AES.encrypt(password, this.key).toString();\n      const data = {\n        user: username,\n        secret: encryptedPassword\n      };\n      console.log('Sign up data submitted:', data);\n      axios.post('http://127.0.0.1:3000/signup').then(response => {\n        console.log('received response:', response.data);\n      }).catch(error => console.error(error));\n    }\n  }\n};","map":{"version":3,"names":["axios","CryptoJS","name","components","data","key","methods","login","username","$refs","loginUsername","password","loginPassword","rememberFlag","loginRemember","encryptedPassword","AES","encrypt","toString","user","secret","remember","console","log","post","then","response","status","catch","error","signup","signupUsername","value","signupPassword","passwordRepeat","signupPasswordRepeat","$toasted","show"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<template>\n  <v-content>\n    <v-form id=\"login-form\">\n      <h2>Login</h2>\n      <v-text-field\n        label=\"Username\"\n        id=\"login-username\"\n        ref=\"loginUsername\"\n        required\n      ></v-text-field>\n      <v-text-field\n        label=\"Password\"\n        type=\"password\"\n        id=\"login-password\"\n        ref=\"loginPassword\"\n        required\n      ></v-text-field>\n      <v-checkbox\n        label=\"Remember me\"\n        id=\"login-remember\"\n        ref=\"loginRemember\"\n      ></v-checkbox>\n      <v-btn type=\"button\" @click=\"login()\">Submit</v-btn>\n    </v-form>\n    <v-form id=\"signup-form\">\n      <h2>Sign Up</h2>\n      <v-text-field\n        label=\"Username\"\n        id=\"signup-username\"\n        ref=\"signupUsername\"\n        required\n      ></v-text-field>\n      <v-text-field\n        label=\"Password\"\n        type=\"password\"\n        id=\"signup-password\"\n        ref=\"signupPassword\"\n        required\n      ></v-text-field>\n      <v-text-field\n        label=\"Repeat Password\"\n        type=\"password\"\n        id=\"signup-password-repeat\"\n        ref=\"signupPasswordRepeat\"\n        required\n      ></v-text-field>\n      <v-btn type=\"button\" @click=\"signup()\">Submit</v-btn>\n    </v-form>\n  </v-content>\n</template>\n\n<script>\nimport axios from 'axios';\nimport CryptoJS from 'crypto-js';\n\nexport default {\n  name: 'LoginView',\n\n  components: {\n  },\n\n  data() {\n    return {\n      key: 'password',\n    };\n  },\n  methods: {\n    login() {\n      const username = this.$refs.loginUsername;\n      const password = this.$refs.loginPassword;\n      const rememberFlag = this.$refs.loginRemember;\n      const encryptedPassword = CryptoJS.AES.encrypt(password, this.key).toString();\n      const data = {\n        user: username,\n        secret: encryptedPassword,\n        remember: rememberFlag,\n      };\n      console.log('login data submitted:', data);\n      axios\n        .post('http://127.0.0.1:3000/login')\n        .then((response) => {\n          console.log('received response:', response.data);\n          if (response.data.status === 0) {\n            console.log('Login Success');\n          } else if (response.data.status === 1) {\n            console.log('Username or Password error');\n          }\n        })\n        .catch((error) => console.error(error));\n    },\n    signup() {\n      const username = this.$refs.signupUsername.value;\n      const password = this.$refs.signupPassword.value;\n      const passwordRepeat = this.$refs.signupPasswordRepeat.value;\n      if (password !== passwordRepeat) {\n        this.$toasted.show('Passwords do not match!');\n        return;\n      }\n      const encryptedPassword = CryptoJS.AES.encrypt(password, this.key).toString();\n      const data = {\n        user: username,\n        secret: encryptedPassword,\n      };\n      console.log('Sign up data submitted:', data);\n      axios\n        .post('http://127.0.0.1:3000/signup')\n        .then((response) => {\n          console.log('received response:', response.data);\n        })\n        .catch((error) => console.error(error));\n    },\n  },\n};\n</script>\n"],"mappings":"AAoDA,OAAAA,KAAA;AACA,OAAAC,QAAA;AAEA;EACAC,IAAA;EAEAC,UAAA,GACA;EAEAC,KAAA;IACA;MACAC,GAAA;IACA;EACA;EACAC,OAAA;IACAC,MAAA;MACA,MAAAC,QAAA,QAAAC,KAAA,CAAAC,aAAA;MACA,MAAAC,QAAA,QAAAF,KAAA,CAAAG,aAAA;MACA,MAAAC,YAAA,QAAAJ,KAAA,CAAAK,aAAA;MACA,MAAAC,iBAAA,GAAAd,QAAA,CAAAe,GAAA,CAAAC,OAAA,CAAAN,QAAA,OAAAN,GAAA,EAAAa,QAAA;MACA,MAAAd,IAAA;QACAe,IAAA,EAAAX,QAAA;QACAY,MAAA,EAAAL,iBAAA;QACAM,QAAA,EAAAR;MACA;MACAS,OAAA,CAAAC,GAAA,0BAAAnB,IAAA;MACAJ,KAAA,CACAwB,IAAA,gCACAC,IAAA,CAAAC,QAAA;QACAJ,OAAA,CAAAC,GAAA,uBAAAG,QAAA,CAAAtB,IAAA;QACA,IAAAsB,QAAA,CAAAtB,IAAA,CAAAuB,MAAA;UACAL,OAAA,CAAAC,GAAA;QACA,WAAAG,QAAA,CAAAtB,IAAA,CAAAuB,MAAA;UACAL,OAAA,CAAAC,GAAA;QACA;MACA,GACAK,KAAA,CAAAC,KAAA,IAAAP,OAAA,CAAAO,KAAA,CAAAA,KAAA;IACA;IACAC,OAAA;MACA,MAAAtB,QAAA,QAAAC,KAAA,CAAAsB,cAAA,CAAAC,KAAA;MACA,MAAArB,QAAA,QAAAF,KAAA,CAAAwB,cAAA,CAAAD,KAAA;MACA,MAAAE,cAAA,QAAAzB,KAAA,CAAA0B,oBAAA,CAAAH,KAAA;MACA,IAAArB,QAAA,KAAAuB,cAAA;QACA,KAAAE,QAAA,CAAAC,IAAA;QACA;MACA;MACA,MAAAtB,iBAAA,GAAAd,QAAA,CAAAe,GAAA,CAAAC,OAAA,CAAAN,QAAA,OAAAN,GAAA,EAAAa,QAAA;MACA,MAAAd,IAAA;QACAe,IAAA,EAAAX,QAAA;QACAY,MAAA,EAAAL;MACA;MACAO,OAAA,CAAAC,GAAA,4BAAAnB,IAAA;MACAJ,KAAA,CACAwB,IAAA,iCACAC,IAAA,CAAAC,QAAA;QACAJ,OAAA,CAAAC,GAAA,uBAAAG,QAAA,CAAAtB,IAAA;MACA,GACAwB,KAAA,CAAAC,KAAA,IAAAP,OAAA,CAAAO,KAAA,CAAAA,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}