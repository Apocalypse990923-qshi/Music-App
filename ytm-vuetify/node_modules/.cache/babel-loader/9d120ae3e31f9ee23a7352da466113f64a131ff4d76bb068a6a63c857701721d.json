{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      albums: [],\n      curAlbum: null,\n      curOrder: null,\n      albumSize: null,\n      trackId: null,\n      musicSrc: null,\n      trackTitle: null,\n      trackSubtitle: null,\n      albumImg: null\n    };\n  },\n  methods: {\n    fetchAlbums() {\n      axios.get('http://127.0.0.1:3000/explore').then(response => {\n        this.albums = response.data;\n      }).catch(error => console.error(error));\n    },\n    playAlbum(albumId, order) {\n      // return the track_id of the corresponding order in the album\n      this.curAlbum = albumId;\n      this.curOrder = order;\n      this.albumImg = `http://127.0.0.1:3000/getCoverImage/${toString(albumId)}.jpg`;\n      const url = `http://127.0.0.1:3000/getTrackInfo/?album_id=${toString(albumId)}&order=${toString(order)}`;\n      axios.get(url).then(response => {\n        this.trackId = response.data.track_id;\n        this.trackTitle = response.data.title;\n        this.trackSubtitle = response.data.artist.join(',');\n        this.musicSrc = `http://127.0.0.1:3000/stream/${this.trackId}`;\n      }).catch(error => console.error(error));\n    },\n    nextSrc() {\n      this.order = (this.order + 1) % this.albumSize;\n      this.playAlbum(this.curAlbum, this.order);\n    },\n    prevSrc() {\n      this.order = (this.order + this.albumSize - 1) % this.albumSize;\n      this.playAlbum(this.curAlbum, this.order);\n    }\n  },\n  mounted() {\n    this.fetchAlbums();\n  }\n};","map":{"version":3,"names":["axios","data","albums","curAlbum","curOrder","albumSize","trackId","musicSrc","trackTitle","trackSubtitle","albumImg","methods","fetchAlbums","get","then","response","catch","error","console","playAlbum","albumId","order","toString","url","track_id","title","artist","join","nextSrc","prevSrc","mounted"],"sources":["src/views/ExploreView.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-for=\"album in albums\" :key=\"album.pid\" class=\"album\">\n      <img :src=\"album.image\" alt=\"Album cover\" />\n      <h2>{{ album.name }}</h2>\n      <button @click=\"playAlbum(album.pid,0)\">Play First Track of the Album</button>\n    </div>\n    <v-audio-player\n      :src=\"musicSrc\"\n      :track-title=\"trackTitle\"\n      :track-subtitle=\"trackSubtitle\"\n      allow-previous\n      allow-next\n      :compact=\"$vuetify.breakpoint.smAndDown\"\n      :autoplay=\"false\"\n      :album-art=\"albumImg\"\n      @next-audio=\"nextSrc()\"\n      @previous-audio=\"prevSrc()\"\n      prev-track-icon=\"mdi-skip-previous\"\n      next-track-icon=\"mdi-skip-next\"\n      back-forward-icon=\"mdi-rewind-5\"\n      fast-forward-icon=\"fast-forward-5\"\n      play-icon=\"mdi-play\"\n      pause-icon=\"mdi-pause\"\n      mute-volume-icon=\"mdi-volume-off\"\n      low-volume-icon=\"mdi-volume-low\"\n      medium-volume-icon=\"mdi-volume-medium\"\n      high-volume-icon=\"mdi-volume-high\"\n    ></v-audio-player>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      albums: [],\n      curAlbum: null,\n      curOrder: null,\n      albumSize: null,\n      trackId: null,\n      musicSrc: null,\n      trackTitle: null,\n      trackSubtitle: null,\n      albumImg: null,\n    };\n  },\n  methods: {\n    fetchAlbums() {\n      axios\n        .get('http://127.0.0.1:3000/explore')\n        .then((response) => {\n          this.albums = response.data;\n        })\n        .catch((error) => console.error(error));\n    },\n    playAlbum(albumId, order) { // return the track_id of the corresponding order in the album\n      this.curAlbum = albumId;\n      this.curOrder = order;\n      this.albumImg = `http://127.0.0.1:3000/getCoverImage/${toString(albumId)}.jpg`;\n      const url = `http://127.0.0.1:3000/getTrackInfo/?album_id=${toString(albumId)}&order=${toString(order)}`;\n      axios\n        .get(url)\n        .then((response) => {\n          this.trackId = response.data.track_id;\n          this.trackTitle = response.data.title;\n          this.trackSubtitle = response.data.artist.join(',');\n          this.musicSrc = `http://127.0.0.1:3000/stream/${this.trackId}`;\n        })\n        .catch((error) => console.error(error));\n    },\n    nextSrc() {\n      this.order = (this.order + 1) % this.albumSize;\n      this.playAlbum(this.curAlbum, this.order);\n    },\n    prevSrc() {\n      this.order = (this.order + this.albumSize - 1) % this.albumSize;\n      this.playAlbum(this.curAlbum, this.order);\n    },\n  },\n  mounted() {\n    this.fetchAlbums();\n  },\n};\n</script>\n\n<style scoped>\n/* Add any specific styles for your album display here */\n.album {\n}\n</style>\n"],"mappings":"AAiCA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,QAAA;MACAC,QAAA;MACAC,SAAA;MACAC,OAAA;MACAC,QAAA;MACAC,UAAA;MACAC,aAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACAZ,KAAA,CACAa,GAAA,kCACAC,IAAA,CAAAC,QAAA;QACA,KAAAb,MAAA,GAAAa,QAAA,CAAAd,IAAA;MACA,GACAe,KAAA,CAAAC,KAAA,IAAAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;IACA;IACAE,UAAAC,OAAA,EAAAC,KAAA;MAAA;MACA,KAAAlB,QAAA,GAAAiB,OAAA;MACA,KAAAhB,QAAA,GAAAiB,KAAA;MACA,KAAAX,QAAA,0CAAAY,QAAA,CAAAF,OAAA;MACA,MAAAG,GAAA,mDAAAD,QAAA,CAAAF,OAAA,WAAAE,QAAA,CAAAD,KAAA;MACArB,KAAA,CACAa,GAAA,CAAAU,GAAA,EACAT,IAAA,CAAAC,QAAA;QACA,KAAAT,OAAA,GAAAS,QAAA,CAAAd,IAAA,CAAAuB,QAAA;QACA,KAAAhB,UAAA,GAAAO,QAAA,CAAAd,IAAA,CAAAwB,KAAA;QACA,KAAAhB,aAAA,GAAAM,QAAA,CAAAd,IAAA,CAAAyB,MAAA,CAAAC,IAAA;QACA,KAAApB,QAAA,wCAAAD,OAAA;MACA,GACAU,KAAA,CAAAC,KAAA,IAAAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;IACA;IACAW,QAAA;MACA,KAAAP,KAAA,SAAAA,KAAA,aAAAhB,SAAA;MACA,KAAAc,SAAA,MAAAhB,QAAA,OAAAkB,KAAA;IACA;IACAQ,QAAA;MACA,KAAAR,KAAA,SAAAA,KAAA,QAAAhB,SAAA,aAAAA,SAAA;MACA,KAAAc,SAAA,MAAAhB,QAAA,OAAAkB,KAAA;IACA;EACA;EACAS,QAAA;IACA,KAAAlB,WAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}